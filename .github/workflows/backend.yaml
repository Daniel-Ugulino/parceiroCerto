name: Backend Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login in Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run ServerRegistry build
        run: |
          cd ./ServerRegistry
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh

      - name: Run ApiGateway build
        run: |
          cd ./ApiGateway
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh

      - name: Run AuthService build
        run: |
          cd ./AuthService
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh

      - name: Run BFF build
        run: |
          cd ./BFF
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh

      - name: Run TaskService build
        run: |
          cd ./TaskService
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh

      - name: Run UserService build
        run: |
          cd ./UserService
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh

      - name: Run ChatService build
        run: |
          cd ./ChatService
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh

      - name: Run FeedbackService build
        run: |
          cd ./FeedbackService
          chmod +x ./mvnw
          chmod +x ./build.sh
          ./build.sh
  deploy:
    runs-on: ubuntu-latest
#    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VM_SSH_KEY_P }}

      - name: Run Kubernets
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USERNAME: ${{ secrets.VM_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no $VM_USERNAME@$VM_HOST 
          minikube start
          sleep 15
          kubectl delete all --all
          cd ./parceiroCerto
          git pull
          cd ./Infra
          run.sh
          
      
        
